<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[HappySchool]]></title><description><![CDATA[Created with <3 by happypeter. I explain with words and code.]]></description><link>https://happyschool.github.io</link><generator>RSS for Node</generator><lastBuildDate>Mon, 03 Jun 2019 12:52:23 GMT</lastBuildDate><item><title><![CDATA[A Gentle Intro To The NervosDAO]]></title><description><![CDATA[People new to the Nervos CKB blockchain may wonder why there is something called NervosDAO. In this episode we will be focusing on why the NervosDAO is created and how it works as an indispensable part of CKB.]]></description><link>https://happyschool.github.io/008-nervos-dao/</link><guid isPermaLink="false">https://happyschool.github.io/008-nervos-dao/</guid><pubDate>Thu, 30 May 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;People new to the Nervos CKB blockchain may wonder why there is something called NervosDAO. In this episode we will be focusing on why the NervosDAO is created and how it works as an indispensable part of CKB.&lt;/p&gt;
&lt;h2 id=&quot;state-rent&quot;&gt;&lt;a href=&quot;#state-rent&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;State Rent&lt;/h2&gt;
&lt;p&gt;To understand what the NervosDAO is, we will need to understand why and how Nervos CKB collects state rent.&lt;/p&gt;
&lt;p&gt;Bitcoin brought mankind decentralized immutable data, which inspired people. Many people wanted to use Bitcoin as a smart contract platform, but later found out it was hard to do so because Bitcoin is not designed as a data preservation focused blockchain. On Bitcoin blockchain, neither the size nor the growth rate of the global state can be bounded in a controlled way. When I save data on Bitcoin blockchain, I pay once with transaction fee, but miners and full nodes have to bear the cost of storage over time. In other word, Bitcoin holds the “pay once, occupy forever” state storage model. There is no way to charge users for their use of the blockchain based on both space and time, and this will easily result in the abuse of the storage space. That’s where the Nervos’ state rent idea comes in.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019053102.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;However, it’s challenging to collect state rent to the state users,  which are usually decentralized communities, because it’s difficult to coordinate all the users to pay for state rent in a fair and efficient way. That’s why Nervos CKB takes a different approach called secondary issuance. We will talk about secondary issuance in detail later in this episode. But the basic idea is simple, unlike Bitcoin which had a hard capped token supply,  Nervos CKB ‘s native token, also called CKB, will be inflated over time. As a smart contract developer you will need to hold certain amount of CKB token in order to occupy some blockchain space to preserve your state. The rent will be charged in the form of inflation tax, in other words, you pay the rent bearing the inflation of your tokens.&lt;/p&gt;
&lt;p&gt;That’s how it works.&lt;/p&gt;
&lt;h2 id=&quot;why-nervosdao&quot;&gt;&lt;a href=&quot;#why-nervosdao&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why NervosDAO?&lt;/h2&gt;
&lt;p&gt;Now it’s time to introduce the NervosDAO, what is it and what benefits does it bring.&lt;/p&gt;
&lt;p&gt;The NervosDAO is a smart contract built on CKB blockchain, and it works like a bank, CKB token holders can deposit their token in it, and get interest in return.&lt;/p&gt;
&lt;p&gt;But for long term CKB token holders, as long as they lock their tokens in the NervosDAO, meaning never occupy the space on blockchain, the inflationary effect of secondary issuance is only nominal. For token holders it’s as if the secondary issuance doesn’t exist, and they’re holding hard-capped tokens, pretty much like Bitcoin.&lt;/p&gt;
&lt;p&gt;To put it shortly, the NervosDAO is there to make CKB token a good Store of Value medium.&lt;/p&gt;
&lt;h2 id=&quot;how-nervosdao-works&quot;&gt;&lt;a href=&quot;#how-nervosdao-works&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How NervosDAO Works?&lt;/h2&gt;
&lt;p&gt;You can stop here if you don’t want to know the details of the NervosDAO. But if you want to more precise, let’s go on with the details of how token issuance and the NervosDAO works.&lt;/p&gt;
&lt;p&gt;The number of base issuance halves approximately every 4 years until all the base issuance tokens are mined out, that’s exactly like Bitcoin. The secondary issuance is designed to collect state rent, and has issuance amount that is constant over time. After base issuance stops, there will only be secondary issuance.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019053103.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;The Nervos CKB uses a two-step approach as an inflation scheme to collect this rent. On top of the base issuance, we add the secondary issuance which can be seen as inflation tax to all existing token holders. For users who use their CKB token to store state, this recurring inflation tax is how they pay state rent to the miners. However, we would have also collected rent from the CKB token that are not used to store state, and we need to return to them what we collected. We allow those users to deposit their CKB tokens into NervosDAO. The NervosDAO receives part of the secondary issuance to make up for the otherwise unfair dilution.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019053104.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Let me give you an example. Let’s suppose at the time of a secondary issuance event, 60% of all CKB tokens are used to store state, 35% of all CKB tokens are deposited in the NervosDAO, and 5% are kept liquid. Then 60% of the secondary issuance goes to the miners, 35% of the issuance goes to the NervosDAO to be distributed to the locked tokens proportionally. The rest of the secondary issuance - in this example, 5% is burned.&lt;/p&gt;
&lt;p&gt;For more information, check the Nervos CKB economics paper &lt;a href=&quot;https://github.com/nervosnetwork/rfcs/blob/master/rfcs/0015-ckb-cryptoeconomics/0015-ckb-cryptoeconomics.md&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://github.com/nervosnetwork/rfcs/blob/master/rfcs/0015-ckb-cryptoeconomics/0015-ckb-cryptoeconomics.md&lt;/a&gt; .&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Alright, that’s almost it for the episode, we talked about what NervosDAO is and how it works. The Nervos CKB design allows the system to collect state rent with inflation tax and meanwhile keep the CKB tokens work like a hard capped money for long time coin hodlers.&lt;/p&gt;
&lt;p&gt;That’s all for this, I am Peter, see you in next episode.&lt;/p&gt;
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at overreacted.io. You can read it online by &lt;a href=&quot;https://happyschool.github.io/008-nervos-dao/&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item><item><title><![CDATA[Nervos CKB Mining Tutorial]]></title><description><![CDATA[Nervos CKB , that is the layer1 blockchain for Nervos network, testnet launched on May 18th. In this episode I will take you though the process of running a CKB node and mining CKB blocks to get reward. We will be using MacOS as the operating system, CKB Javascript SDK to generate wallet, and the blockchain's explorer to view results.]]></description><link>https://happyschool.github.io/007-ckb-mine/</link><guid isPermaLink="false">https://happyschool.github.io/007-ckb-mine/</guid><pubDate>Thu, 23 May 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Nervos CKB , that is the layer1 blockchain for Nervos network, testnet launched on May 18th. In this episode I will take you through the process of running a CKB node and mining CKB blocks to get reward. We will be using MacOS as the operating system, CKB Javascript SDK to generate wallet, and the blockchain’s explorer to view results.&lt;/p&gt;
&lt;h2 id=&quot;how-things-fit-together&quot;&gt;&lt;a href=&quot;#how-things-fit-together&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How Things Fit Together&lt;/h2&gt;
&lt;p&gt;Before getting hands dirty, let’s first look at the big picture to see how things fit together. &lt;/p&gt;
&lt;p&gt;In order to mine CKB, you need to run your own node first, but what is a node? The answer is simple&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A node is a computer with CKB client installed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I will show you how to download the client software and install it soon enough.&lt;/p&gt;
&lt;p&gt;And what is CKB testnet? CKB is a blockchain, a peer to peer network, which means there is no server, so the testnet is nothing but all the CKB nodes together, the nodes talk to each other, and reach consensus on data to make the whole chain trust worthy. Testnet is different from mainnet in that it is here for testing things.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019052402.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;A SDK is a piece of code that help you interact with CKB network. In this episode, Javascript version of the SDK will be used, so in order to follow along, You might need to have basic understanding of how Javascript and Nodejs works. But there are SDKs for other languages too, check the official doc site &lt;a href=&quot;https://docs.nervos.org&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://docs.nervos.org&lt;/a&gt; for more on that. &lt;/p&gt;
&lt;p&gt;The process goes like this. I will first show you how to setup a node, then using the SDK to generate a wallet of your own, now change the node config to use your own wallet, so that the mining reward will be saved to the wallet. Then I will start to mine the block, and mining means to use my laptop’s computing power to find a hash that match the network’s requirement, once I find the hash, that means I find the seal for the block, I can publish the block to the network and get certain amount of CKB coins as the reward. And finally, I will show you how to use CKB blockchain explorer to check your rewards.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019052403.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Finally be warned. The testnet will be reset every two weeks, so any coins you have on the testnet will be cleared upon the reset.&lt;/p&gt;
&lt;h2 id=&quot;run-a-node&quot;&gt;&lt;a href=&quot;#run-a-node&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run a node&lt;/h2&gt;
&lt;p&gt;OK, let’s setup a node. &lt;/p&gt;
&lt;p&gt;Firstly, download the binary from official Github repo&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;wget https://github.com/nervosnetwork/ckb/releases/download/v0.12.0/ckb_v0.12.0_darwin_amd64.zip&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Uncompress the zip file&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;unzip ckb_v0.12.0_darwin_amd64.zip
cd ckb_v0.12.0_darwin_amd64&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run this command to make &lt;code class=&quot;language-text&quot;&gt;ckb&lt;/code&gt; a system command. It’s a typical unix trick to create a symlink, but it’s OK for you not to understand what a symlink is for now.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;sudo ln -snf &amp;quot;$(pwd)/ckb&amp;quot; /usr/local/bin/ckb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then check if it works by running:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;ckb --version&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that CKB client is installed, I can generate the default configuration files for the testnet with&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;ckb init -C ckb-testnet --spec testnet&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We created a folder named ckb-testnet, and generated config files in it.&lt;/p&gt;
&lt;p&gt;Go inside the folder and start CKB software&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;cd ckb-testnet
ckb run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the console output we see that my node is downloading the whole blockchain from other nodes, this will take sometime. You can go to &lt;a href=&quot;https://explorer.nervos.org/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://explorer.nervos.org/&lt;/a&gt; to know the latest block height, so that you will get a sense of how long the downloading will take.&lt;/p&gt;
&lt;p&gt;Once the downloading finished, we have our node up and running, awesome~~~&lt;/p&gt;
&lt;h2 id=&quot;use-your-own-wallet&quot;&gt;&lt;a href=&quot;#use-your-own-wallet&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use Your Own Wallet&lt;/h2&gt;
&lt;p&gt;Now I need to generate my own wallet and replace the default configuration for the local node, so that the mining reward goes to my own wallet.&lt;/p&gt;
&lt;p&gt;Firstly, create a simple Nodejs project. Be aware that this project is not part of the CKB node, and it’s only used to generate a wallet for us. &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;$ node --version
v10.10.0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The code will use some new JS features like async/await, so make sure your Nodejs version is not too old, mine is 10.10, please use a same or greater version.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;mkdir gen-wallet
cd gen-wallet
npm init -y&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create a folder to save the node project, run &lt;code class=&quot;language-text&quot;&gt;node init&lt;/code&gt; to generate a package.json file.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;yarn add @nervosnetwork/ckb-sdk-core&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And install the JS SDK as a npm package.&lt;/p&gt;
&lt;p&gt;Now create a file named index.js with demo code from the JS SDK official repo &lt;a href=&quot;https://github.com/nervosnetwork/ckb-sdk-js&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://github.com/nervosnetwork/ckb-sdk-js&lt;/a&gt; .&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;EC&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;elliptic&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ec
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Core &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;@nervosnetwork/ckb-sdk-core&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Address &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;@nervosnetwork/ckb-sdk-address&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ec &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;EC&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;secp256k1&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; privateKey &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ec&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;genKeyPair&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; address &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Address&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;privateKey&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; prefix&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;ckt&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;privateKey: &apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;0x&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; address&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getPrivateKey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;address: &apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; address&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; nodeUrl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; process&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;env&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;NODE_URL&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;http://localhost:8114&apos;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; core &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;nodeUrl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; bootstrap &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; systemCellInfo &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; core&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;loadSystemCell&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;


  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;SYSTEM_ENCRYPTION_CODE_HASH&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; core&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;rpc&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;paramsFormatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toHash&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    systemCellInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;codeHash
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; myAddressObj &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; core&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;generateAddress&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;privateKey&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blake160edPublicKey &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; core&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;utils&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;blake160&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;myAddressObj&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;publicKey&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;hex&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;


  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; script &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    codeHash&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;SYSTEM_ENCRYPTION_CODE_HASH&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    args&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;0x&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; blake160edPublicKey&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;\nscript: &apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; script&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To generate a new wallet， run&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;$ node index.js

privateKey:  0x25395da41ffb99c007ef1e0e2621381577faeeeec486d0943894bba0edacbaeb
address:  ckt1q9gry5zgckljj20cxh4k33ufu3q2kxxx2jv0cmk4ykgkhc


script:  { codeHash:
   &amp;#39;0x9e3b3557f11b2b3532ce352bfe8017e9fd11d154c4c7f9b7aaaa1e621b539a08&amp;#39;,
  args: [ &amp;#39;0xc5bf2929f835eb68c789e440ab18c65498fc6ed5&amp;#39; ] }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first two lines of output is the wallet, which is nothing more than a private and public key pair. The later script part is another form for your wallet’s public key, which you can use to replace the node’s default config in ckb.toml&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;[block_assembler]
  code_hash = &amp;quot;0x9e3b3557f11b2b3532ce352bfe8017e9fd11d154c4c7f9b7aaaa1e621b539a08&amp;quot;
  args = [&amp;quot;0xc5bf2929f835eb68c789e440ab18c65498fc6ed5&amp;quot;]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now Ctrl-C to stop the ckb process, restart again to load the modified config.&lt;/p&gt;
&lt;p&gt;To start mining, we need to open a new terminal and run&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;ckb miner&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wait for a few minutes, until you see something like this in the console output&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;2019-05-22 22:04:56.210 +08:00 main INFO miner  found seal: Seal { nonce: 12598543649063525489, proof: 0xf9030000ab350000ad3a0000ab4000007f4600001e4b00005d5200003e5b0000625d00003d6200001e6f000069780000 }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This means I’ve found a seal for a block, and mined a block successfully.&lt;/p&gt;
&lt;p&gt;So we can go to &lt;a href=&quot;https://explorer.nervos.org&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://explorer.nervos.org&lt;/a&gt; , search our wallet by its address and check to see the reward.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Alright, that is all for this episode, I showed you how to setup a CKB node and mine blocks. Hope you enjoyed it, see you next time.&lt;/p&gt;
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at overreacted.io. You can read it online by &lt;a href=&quot;https://happyschool.github.io/007-ckb-mine/&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item><item><title><![CDATA[The Value Of Bitcoin]]></title><description><![CDATA[US dollar is backed by the US tax, company stock is backed by the assets of the company, many people think bitcoin is a scam, since the value seems to come from thin air. Does Bitcoin has any value at all? Different people has different view points. In my eyes, Bitcoin is a network, the value should be measured by the dispersion of the coins. At the same time, Bitcoin is not like a traditional IT network, it it not a network of information, it is a network of value and consensus.]]></description><link>https://happyschool.github.io/006-value/</link><guid isPermaLink="false">https://happyschool.github.io/006-value/</guid><pubDate>Thu, 16 May 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;US dollar is backed by the US tax, company stock is backed by the assets of the company, many people think Bitcoin is a scam, since the value seems to come from thin air. Does Bitcoin has any value at all? Different people has different view points. In my eyes, Bitcoin is a network, the value should be measured by the dispersion of the coins. At the same time, Bitcoin is not like a traditional IT network, it is not a network of information, it is a network of value and consensus.&lt;/p&gt;
&lt;p&gt;This content was originally posted in July 2018 at &lt;a href=&quot;https://zhuanlan.zhihu.com/p/40606500&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://zhuanlan.zhihu.com/p/40606500&lt;/a&gt; in Chinese.&lt;/p&gt;
&lt;h2 id=&quot;bitcoin-is-a-network&quot;&gt;&lt;a href=&quot;#bitcoin-is-a-network&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bitcoin Is A Network&lt;/h2&gt;
&lt;p&gt;My first and also main point is that Bitcoin is a network and its value depends on how many people is using the network, or to put it differently, the dispersion of the coins.&lt;/p&gt;
&lt;p&gt;Must all value be backed with some assets? Not necessarily. Wechat certainly values more than billions, but is not backed by any visible assets. Same is true for Facebook and Taobao, why are they so valuable? The answer is that they are all networks. Take Wechat as an example, if I am the only guy using Wechat, does Wechat has any value? No. But if I can connect my family with Wechat, a small network is formed, and the value is there. With the number of network nodes rising, the value of the network rises exponentially. With all our old mates, clients, supporters connected, Wechat’s value exploded, like many Chinese people experienced in person.&lt;/p&gt;
&lt;p&gt;Likewise, Bitcoin is a network too, with each holder as a node of the network. A side note, tech geeks will tell you a machine with Bitcoin client is a node, but that’s not the viewpoint I take now. For the last 10 years, coins are dispersed to the hands of many people. The outsiders sees only the market cap, but what matters is the dispersion. More holders bring larger network, and therefore the value of network is greater. That explains why one same bitcoin worth more and more, and believers still consider there is a value behind the price.&lt;/p&gt;
&lt;p&gt;That brings us to the end of my first point.&lt;/p&gt;
&lt;h2 id=&quot;network-of-value&quot;&gt;&lt;a href=&quot;#network-of-value&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Network Of Value&lt;/h2&gt;
&lt;p&gt;The second point is equally important. Bitcoin is not merely a IT network like others, but a network of value. One of a famous figure in Bitcoin field named Andreas Antonopoulos once wrote a book called Internet Of Money, and I highly recommend that.&lt;/p&gt;
&lt;p&gt;But is the value of Bitcoin overvalued? Like Wechat, Bitcoin is a network, but there is the big big difference between traditional network of information like Wechat and the new network of value like Bitcoin. Bitcoin for first time in history enables people to pass something on Internet to another person, and before that you can only share sth with others, which means you still hold a copy. Keeping a copy for ourselves won’t harm if we are sharing some information, but is not acceptable if we want to pass value.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019051503.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;To quote XiaoLai Li, one of the Bitcoin early investors in China&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Internet implemented the Zero-cost information transmitting, 20 years later till now, all industries have been heavily impacted by the Internet. Blockchain implemented Zero-cost value transmitting, so it’s very hard to image how much our world will be impacted.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Mainstream people are not yet using Bitcoin very often, but within the circle of Crypto people, there are real world use of Bitcoin in many places for sure.&lt;/p&gt;
&lt;p&gt;Bitcoin means freedom to pay, money is your vote.&lt;/p&gt;
&lt;h2 id=&quot;network-of-consensus&quot;&gt;&lt;a href=&quot;#network-of-consensus&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Network Of Consensus&lt;/h2&gt;
&lt;p&gt;Bitcoin is a network of value based on network of consensus. We are here at the third and last point of this episode and will cover why Bitcoin is also interesting form a social perspective.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019051504.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Consensus does not only happens with Bitcoin. The fancy word Blockchain, simply means consensus achieved by cryptography. People used to base their trust on small number of so-called trust-worthy people, but now Blockchain people try to rebuild a new society with its root of trust based on consensus of everybody. Our society pays a lot for the lack of trust. Blockchain is here to build the trust with math. It’s ridiculous to hear people saying Blockchain is a wonderful new invention, and Bitcoin is a scam, since Bitcoin is the thing that brings Blockchain to us.&lt;/p&gt;
&lt;p&gt;Bitcoin is money issuing based on the consensus of everybody. That’s why Bitcoin is trust-worthy, cause everybody are watching.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;To conclude this episode, Bitcoin showed us the right direction of our future, but I am not saying Bitcoin is 100 percent the final solution for the job. So it’s risky to invest in Bitcoin. But for me Bitcoin is still the best for job at least for now, so I put in a certain amount of money and never care about the short term. Price will pump and dump, but the value of the network grow only gradually with people like you and me coming in.&lt;/p&gt;
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at overreacted.io. You can read it online by &lt;a href=&quot;https://happyschool.github.io/006-value/&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item><item><title><![CDATA[The Architecture of Web3.0]]></title><description><![CDATA[There are several different perspectives to understand Blockchain's value, one of which is by knowing the role it plays in the context of next generation Web, namely Web3.0. There are several challenges we may face building a decentalized Web, and let's figure out how Blockchain can fix them and why DApps will require the decoupling of App and Data. At last, I wish you are able to form a new Blockchain investment model by looking at a picture larger than Smart Contract.]]></description><link>https://happyschool.github.io/005-web3/</link><guid isPermaLink="false">https://happyschool.github.io/005-web3/</guid><pubDate>Thu, 09 May 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;There are several different perspectives to understand Blockchain’s value, one of which is by knowing the role it plays in the context of next generation Web, namely Web3.0. There are several challenges we may face building a decentalized Web, and let’s figure out how Blockchain can fix them and why DApps will require the decoupling of App and Data. At last, I wish you are able to form a new Blockchain investment model by looking at a picture larger than Smart Contract.&lt;/p&gt;
&lt;p&gt;The outline is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Next Web will be decentralized&lt;/li&gt;
&lt;li&gt;Blockchain as the incentive layer and truth layer&lt;/li&gt;
&lt;li&gt;How decentralized ID works&lt;/li&gt;
&lt;li&gt;From App to DApp — A paradigm shift&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let’s get started.&lt;/p&gt;
&lt;h2 id=&quot;next-web-will-be-decentralized&quot;&gt;&lt;a href=&quot;#next-web-will-be-decentralized&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Next Web will be decentralized&lt;/h2&gt;
&lt;p&gt;Technology always moves humanity forward, and empowers individuals. We see a clear clue of decentralization in the history.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050902.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;1943, somebody from IBM said 5 computers would be enough for the whole world to use, and everybody was expected to connect to them with her dumb terminal. Obviously, Apple and Microsoft did not buy this, and the rest was history. The picture here comes from a early Apple advertisement with a lady holding a hammer to smash the monopoly of IBM. The right side shows Apple2, one of the early personal computer that many people knew about. A side note, Microsoft did not start the PC revolution, Apple did.&lt;/p&gt;
&lt;p&gt;Similarly, corperations were reluctant to use the newly born Internet with low security, no censorship, and full of drug dealers and porn. That’s why they tried to build a global intranet, and keep it pure by tight control. In reality, the public Internet won at last, because innovation happens when there is enough freedom.&lt;/p&gt;
&lt;p&gt;It was not just hardware that got decentralized, software too. Microsoft made huge profit by selling software copies. But after 2000, with the rise of so called internet companies like Google and Facebook, selling software is no longer so common. Google offers its software for free, while instead make use of user’s data to make a profit.&lt;/p&gt;
&lt;p&gt;The main goal for the decentralization of the Web is to set up digital property rights there, and let the users own their own data. That is to decentralize data ownership. Therefore, data can be traded freely and economy will boom.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050903.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;The current Web falls deep in the centraliztion hole. Facebook plus google mean a large part of many people’s Web. We need to first get into their walled gardens to be able to use the Web. I like these companies cause they are much better than the earlier systems, but things have to change to stop them to be the next dictators.&lt;/p&gt;
&lt;p&gt;When the Web was born, it was totally decentralized. It was expected to empower individuals and clear out the social hirachey. But current reality is the monopolies are getting stronger, so what’s the problem here? To put it simply, the current Web lacks a effective way to incentivise people and keeping truth.&lt;/p&gt;
&lt;h2 id=&quot;blockchain-as-the-incentive-layer-and-truth-layer&quot;&gt;&lt;a href=&quot;#blockchain-as-the-incentive-layer-and-truth-layer&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blockchain As the Incentive layer and Truth Layer&lt;/h2&gt;
&lt;p&gt;Blockchain will fill the gap by providing the truth layer and incentive layer for the Web. Let first figure out why a truth layer is indispensable.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050904.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Firstly, the Web needs immutable data as the root of trust. The Web has no way to store data for itself, data must be saved in somebody’s database which can neither stop data tampering nor allow others to verify the data is not tampered. Therefore, some say there are only data on Web, no truth. And what is root of trust? when we open google.com, we trust it is google, since DNS system is secure enough to prenvent attackers from faking the domain, here DNS system is the root of trust. When we use HTTPS, we believe the certificates are not faked, because we trust the organization, namely the CA, that issued the certificates. CAs are here the root of trust.&lt;/p&gt;
&lt;p&gt;Web3.0 will use Blockchain as root of trust. DNS and CAs for Web3.0 will be based on Blockchain and its immutable data. It’s rediculus now that the Web2.0 root of trust is actually organizations, that are nothing more than small groups of strangers. But Blockchain follows the priciple that&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In Math We Trust&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There is no one to trust, all you need is to trust Math. In a nut shell, Blockchain means everybody on earth can hold a copy of the data, people reach a consensus following clear mathimatical rules to make sure the data is not tampered.&lt;/p&gt;
&lt;p&gt;Secondly, with the truth layer, we can implement self-executed rules. In real world, court is there to enforce the law by punishing evil. With truely trust worthy data, we can now first time in history let the software to execute real world rules automatically, that’s the idea behind smart contract. For real world projects, you can check Nervos to know more about the idea of crypto court, and check Ethereum to know more about smart contracts. We will not talk much here, since we will be foucing on the next Web.&lt;/p&gt;
&lt;p&gt;That’s why the truth layer is so important, and now let’s move on to make it clear why a incentive layer is also indespensible.&lt;/p&gt;
&lt;p&gt;Firstly, a decentralized system must be able to run by itself. Remember, in decentralized world there is no company to provide servers for us, then there has to be some way to incentivise users to share their own hardware resources to save or process data for strangers. Fortunately, We have coins on Blockchain for this. Some people call Blockchain distributed ledger, digital coins running on it brings an incentive layer for the Web.&lt;/p&gt;
&lt;p&gt;Secondly, Blockchain is able the align the interests of all parties, and movtivate everyone work towards the same goal. Old time democracy usually resulted in a mob. People got rid of one tyrant and got 1000 in return. But on blockchian, the democracy is based on contribution, it’s different from the one person one vote schema. If you contribute nothing, you don’t have a vote.&lt;/p&gt;
&lt;p&gt;Thirdly, coins can be used to avoid the abuse of public resources. A lot of the Web2.0 infrastructures can be used free of charge. Bad guys therefore are able to abuse them to send Email SPAM or DDOS attacts. One of the ancestors of Bitcoin is Hashcash, it was design to prevent such abuse. With blockchain, we can give all the resources a small price, normal users won’t feel it, but spamers will find it too expensive to send thousands emails a time.&lt;/p&gt;
&lt;p&gt;Now is the point we conculde the importances of truth layer and incentive layer. Without the two, there is no way the Web can be decentralized.&lt;/p&gt;
&lt;h2 id=&quot;decentralized-id&quot;&gt;&lt;a href=&quot;#decentralized-id&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Decentralized ID&lt;/h2&gt;
&lt;p&gt;The next generation Web will be decentralized, therefore digital identity, ID for short, will be decentralized as well. What exactly is ID? Why should it be decentralized? Will the concept of login still be relevant for a decentralized Web? And most importantly how decentralized ID works? Let’s take a glimpse of the future.&lt;/p&gt;
&lt;p&gt;A simple question first, what is ID? In digital world, a user ID is made of everything she says, does and experiences.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050906.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Your ID is more than your username and password. For example, my Github username is happypeter, happypeter is my ID identifier, and password is the secret key to prove I own my ID, but it is very different from a private key which we will talk soon. So happypeter is not my ID, it is the identifier of my ID.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050907.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;My id is me in digital form, a virtual me. ID is everything that defines me, all the personal data generated by technolody. Today, the digital representation of a ID is a mix of data fragmented across many apps and services. You don’t own your ID, large commercial entities like google and facebook own it. &lt;/p&gt;
&lt;p&gt;Now it’s time to ask a serious question. Why do we need decentralized ID? The answer is quite simple, users need to control their own data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050908.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Let’s first make it clear that what is a decentralized ID. What are the key differences between a decentralized ID and a current centralized one? Currently, my facebook ID is owned by facebook, the id identifier, and all my personal data that goes with this it is stored in facebooks’s database. However, a decentralized ID is not owned by anybody but you. It is user-generated, self-owned, with a globally unique identifier rooted in blockchain.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050909.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Every user needs a ID that she truly owns. She will be in control of her own data and able to decide what she shares, who she shares with and when to stop sharing. &lt;/p&gt;
&lt;p&gt;A decentralized ID system is still not widely deployed, it’s hard to say what’s the final solution. But we can clearly see a lot of consensus has gathered around W3C DID &lt;a href=&quot;https://w3c-ccg.github.io/did-spec&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://w3c-ccg.github.io/did-spec&lt;/a&gt; and people are collaborating on platforms like DIF &lt;a href=&quot;https://identity.foundation/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://identity.foundation/&lt;/a&gt; with members like Microsoft, IBM, Webank, and also blockchain projects like Ethereum, Bytom, Blockstack etc. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050910.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;User first needs to generate her ID identifier, a username in the decentralized world. Currently cellphone number or email addresses or social network usernames are wildly used to login our daily apps. They are nice identifiers in that they are really human-friendly, but problems is that they are centralized and given by other providers and can be removed by them. If you use a decentralized system like Blockstack, your ID identifier will be generated on blockchain, with W3C DID data syntax. However decentralized ID identifier is not human-friendly, I can no longer use something like happypeter, DID identifier usually is much longer, like&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;did:example:123456789abcdefghi&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Due to the Zooko’s Triangle, DID is hard to make human-meaningful. Binding an easy to remember username to the DID in a really secure and decentralized way is harder than it looks.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050912.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;The decentralized world has no server at all, users are responsible to save their own data. Blockchain projects like Ethereum is like a mainframe trying to save all the user data on the chain, but considering how much data a user using her social app can generate, many people are now prefer a layered solution. That is only saving the most important root of trust data on-chain, while users’ actual identity data resides encrypted off-chain. &lt;/p&gt;
&lt;p&gt;Users will store data at their own devices or their own controlled cloud space. Preferably it will be a blockchain backed decentralized storage method, say IPFS or Blockstack’s Gaia system &lt;a href=&quot;https://github.com/blockstack/gaia&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://github.com/blockstack/gaia&lt;/a&gt; . Because these are not controlled by any commercial entity and is immune to censorship. Or you can still use Google or Microsoft’s cloud services as long as you do enough backups. All your data is encrypted, so nobody knows what’s inside.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050913.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Each DID has its own public key also saved on blockchain, and user uses the private key to do authentication and authorization. Even you are not a Cryptography expert, and have no idea about how digital signatures works. It’s not hard to understand how people can sign with their private key to prove that they are associated with a DID, and they have the right to do something. But authenticating by signing way is not like the traditional logging in.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050914.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Bitcoin developer Peter Todd once said,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you’re logging in it is centralized&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Traditionally, my username and password are stored in the app’s database, the logging in is actually asking the app if I can come in. But now with the decentralized way, I don’t need to stay logging in at all, whenever I need to prove my right to do sth, I sign with my private key. Also I sign to authorize people how they can access my data, say, I can allow all my friends to view my posts, and my collaborators to edit the documentation I shared with them, everything can be done in a fine-grained way.&lt;/p&gt;
&lt;p&gt;That’s how decentralized ID works.&lt;/p&gt;
&lt;h2 id=&quot;the-paradigm-shift&quot;&gt;&lt;a href=&quot;#the-paradigm-shift&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Paradigm Shift&lt;/h2&gt;
&lt;p&gt;Web3.0 will experience an app design paradigm shift, we will switch from an App-centered to a User-centered paradigm. And this is very important for the decentralization of the Web.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050915.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;For centralized Web, Data and App are tightly bound together. If you use Facebook, your ID is saved in Facebook database. There is no good way to get all your data out, and no point to do so since other apps won’t be able to parse the data due to the incompatible format.&lt;/p&gt;
&lt;p&gt;However in the decentralized world, there is this huge paradigm shift&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;App design will be user-centered rather than App-centered.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By saying User-centered, to a large extend, it means different apps will be designed based on one single User ID.&lt;/p&gt;
&lt;p&gt;User will hold her own ID. At the same time, my friends and I share the same format for all our social networking data, because we all follow an open standard. And the connections among us is also part of our ID, and are not saved with some specific app.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050916.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Apps will switch role from the rule makers, to pure tools for the users saving and parsing data following the standard format. This way, users are in charge of the whole game and have the freedom to exit, which means if I don’t like social app A, I can switch to app B without losing my own data and all the connections with my friends. Cause everything is saved in our IDs followings the same standard, all the apps will be able to parse the data. Think about the Bitcoin P2P network, you can write a client yourself with whatever features you like, as long as you respect to protocol of the network, you will still be able to connect to other peer clients. That’s what I meant by a User-centered design paradigm.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050917.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;And we will see a shift from App-in-charge to Protocol-in-charge schema as well. Now the situation is big companies try there best to maintain a great app, so that they can hold the user data and make all the money, that’s how monopolies are born, since once you build the app people love, all your competitors are cut out. But the future is different, because what’s important is the open standards and protocols, users hold their own IDs, all the ID data follows the same format, all the apps connect with each other with a open protocol, forming a fair market for all the developers.&lt;/p&gt;
&lt;p&gt;The paradigm shift brings a benefit that users become first-class citizens, and are not dictated by some app. Therefore they are free to use their data whenever and wherever they want in whatever way. To understand the paradigm shift is key to understand the decentralization of the Web and how DApp works.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;That’s almost all I want to share for this episode. And Lastly I want to stress on a few points.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050918.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Firstly, Web3.0 will be a trust-worthy Web. All the infrastructure burying their root of trust in Blockchain, benefiting from its data immutability, to form a trust-less system. Web2.0 is not trust-worthy itself, all the trust is from some organization.&lt;/p&gt;
&lt;p&gt;Secondly, DApps will be part of the Web, they will be community driven. Companies will still build DApps in order to provide their services, but since Apps won’t be able to hold user data, so companies will see them very differently.&lt;/p&gt;
&lt;p&gt;Thirdly, User ID won’t be fragmented into different apps. Data formats will follow some open standards, and all the apps trying to parse the data will have to follow the standards as well.&lt;/p&gt;
&lt;p&gt;Lastly, if you want to check real world Web3.0 infrastructure and DApps, go to Blockstack.org for more resources.&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;
&lt;p&gt;Ref:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://microsoft.com/ownyouridentity&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;http://microsoft.com/ownyouridentity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blockstack.org/videos/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://blockstack.org/videos/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at overreacted.io. You can read it online by &lt;a href=&quot;https://happyschool.github.io/005-web3/&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item><item><title><![CDATA[Why Decentralized ID?]]></title><description><![CDATA[Many people believe the next generation Web will be decentralized, therefore digital identity, ID for short, will be decentralized as well. What exactly is ID? Why should it be decentralized? Will the concept of login still be relevant for a decentralized Web? And most importantly how decentralized ID works?]]></description><link>https://happyschool.github.io/004-id/</link><guid isPermaLink="false">https://happyschool.github.io/004-id/</guid><pubDate>Thu, 02 May 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Many people believe the next generation Web will be decentralized, therefore digital identity, ID for short, will be decentralized as well. What exactly is ID? Why should it be decentralized? Will the concept of login still be relevant for a decentralized Web? And most importantly how decentralized ID works? Let’s take a glimpse of the future.&lt;/p&gt;
&lt;h2 id=&quot;what-is-digital-identity&quot;&gt;&lt;a href=&quot;#what-is-digital-identity&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Digital Identity?&lt;/h2&gt;
&lt;p&gt;A simple question first, what is ID? In digital world, a user ID is made of everything we say, do and experience.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050202.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Your ID is more than your username and password. For example, my Github username is happypeter, happypeter is my ID identifier, and password is like the secret key to prove I own my ID, but it is very different from a private key which we will talk soon. So happypeter is not my ID, it is the identifier of my ID.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050203.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Your ID is a virtual you in digital form. Your ID is everything that defines you in the digital world, a collection of all your personal data generated with technology. Today, the digital representation of a ID is a mix of data fragmented across many apps and services.&lt;/p&gt;
&lt;p&gt;You don’t own your ID, large commercial entities like google and facebook own it. There are two reasons for this. NO.1, Till now, most user data is generated when a lot of user using the same app, say google search, or facebook, as the creator of the apps, the companies behind them own the data. NO.2, the Web is not a secure environment, it is impossible to store data in an immutable way before the blockchain technology is invented, so we need  large cooperations as the root of trust, whatever in their databases is considered truth.&lt;/p&gt;
&lt;p&gt;To conclude this part. An ID is a virtual you in digital world, and for now, it is
not owned by you, but some companies.&lt;/p&gt;
&lt;h2 id=&quot;why-need-decentralized-id&quot;&gt;&lt;a href=&quot;#why-need-decentralized-id&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why Need Decentralized ID?&lt;/h2&gt;
&lt;p&gt;Now it’s time to ask a serious question. Why do we need decentralized ID? The answer is quite simple, users need to control their own data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050204.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Let’s first make it clear that what is a decentralized ID. What are the key differences between a decentralized ID and a current centralized one? Currently, my facebook ID is owned by facebook, the id identifier, and all my personal data that goes with this username is stored in facebooks’s database. However, a decentralized ID is not owned by anybody but you. It is user-generated, self-owned, with a globally unique identifier rooted in blockchain.&lt;/p&gt;
&lt;p&gt;Every user needs a ID that she truly owns. She will be in control of her own data and able to decide what she shares, who she shares with and when to stop sharing. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050205.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Apps will be designed with users at the center. In the coming decentralized digital world, data will not be generated according to a specific app’s logic and saved in SQL structure. Data will be saved in a more semantic syntax, following some open standard that is shared by all users on Web. All apps should save the data following the open standard that users choose. This is a huge paradigm shift, user will no longer be under the dictation of some popular apps. I am free to leave facebook if I don’t like their UI. All my personal data goes with the my decentralized ID, I am able to use another app, and still have all my friends connected, cause the connection is at the data layer, not the app layer.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050206.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;That’s why we need decentralized ID.&lt;/p&gt;
&lt;h2 id=&quot;how-it-works&quot;&gt;&lt;a href=&quot;#how-it-works&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How It Works?&lt;/h2&gt;
&lt;p&gt;A decentralized ID system is still not widely deployed, it’s hard to say what’s the final solution. But we can clearly see a lot of consensus has gathered around W3C DID &lt;a href=&quot;https://w3c-ccg.github.io/did-spec&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://w3c-ccg.github.io/did-spec&lt;/a&gt; and people are collaborating on platforms like DIF &lt;a href=&quot;https://identity.foundation/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://identity.foundation/&lt;/a&gt; with members like Microsoft, IBM, Webank, and also blockchain projects like Ethereum, Bytom, Blockstack etc. &lt;/p&gt;
&lt;p&gt;Users first need to generate their ID identifier, a username in the decentralized world. Currently cellphone number or email addresses or social network usernames are wildly used to login our daily apps. They are nice identifiers in that they are really human-friendly, but problems is that they are centralized and given by other provider and can be removed by them. If you use a decentralized system like Blockstack, your ID identifier will be generated on blockchain, with W3C DID data syntax. However decentralized ID identifier is not human-friendly, I can no longer use something like &lt;code class=&quot;language-text&quot;&gt;happypeter&lt;/code&gt;, DID identifier usually is much longer, like&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;did:example:123456789abcdefghi&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Due to the Zooko’s Triangle, DID is hard to make human-meaningful. Binding an easy to remember username to the DID in a really secure and decentralized way is harder than it looks.&lt;/p&gt;
&lt;p&gt;The decentralized world has no server at all, users is responsive to save their own data. Blockchain projects like Ethereum is like a mainframe trying to save all the user data on the chain, but considering how much data a user using her social app can generate, many people are now prefer a layered solution. That is only saving the most important root of trust data on-chain, while users’ actual identity data resides encrypted off-chain. &lt;/p&gt;
&lt;p&gt;Users will store data at their own devices or their own controlled cloud space. Preferably it will be a blockchain backed decentralized storage method, say IPFS or Blockstack’s Gaia system &lt;a href=&quot;https://github.com/blockstack/gaia&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://github.com/blockstack/gaia&lt;/a&gt; . Because these are not controlled by any commercial entity and is immune to censorship. Or you can still use Google or Microsoft’s cloud services as long as you do enough backups. All your data is encrypted, so nobody knows what’s inside.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019050207.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Each DID has its own Public Key also saved on blockchain, and user uses the private key to do authentication and authorization. Even you are not a Cryptography expert, and have no idea about how digital signatures work. It’s not hard to understand how people can sign with their private key to  prove that they are associated with a DID, and they have the right to do something. But authenticating by signing way is not like the traditional logging in.&lt;/p&gt;
&lt;p&gt;Bitcoin developer Peter Todd once said,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you’re logging in it is centralized&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Traditionally, my username and password are stored in the app’s database, the logging in is actually asking the app if I can come in. But now under the decentralized way, I don’t need to stay logging in at all, whenever I need to prove my right to do sth, I sign with my private key. Also I sign to authorize people how they can access my data, say, I can allow all my friends to view my posts, and my collaborators to edit the documentation I shared with them, everything can be done in a fine-grained way.&lt;/p&gt;
&lt;p&gt;That’s how decentralized ID works.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Lastly, I hope I have made two points clear: NO.1 Decentralized ID is needed if people want to control their virtual self, with our life becoming more digitalized day-by-day, it’s hard to imagine people will still want a small group of strangers control their ID. NO.2 It will take some time and a big paradigm shift, but the current Web2.0 functionalities can be done in a decentralized manner.&lt;/p&gt;
&lt;p&gt;ref:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://w3c-ccg.github.io/did-spec/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://w3c-ccg.github.io/did-spec/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://azure.microsoft.com/en-us/overview/decentralized-identity/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://azure.microsoft.com/en-us/overview/decentralized-identity/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;microsoft.com/ownyouridentity&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://identity.foundation&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://identity.foundation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at overreacted.io. You can read it online by &lt;a href=&quot;https://happyschool.github.io/004-id/&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item><item><title><![CDATA[How IPFS Works Under The Hood]]></title><description><![CDATA[Next generation Web, Web3, should be more decentralized and censorship resistant, which requires a more decentralized way for data storage. That is why IPFS, InterPlanetary File System, and Filecoin got so much attention, let's figure out how IPFS works under the hood.]]></description><link>https://happyschool.github.io/003-ipfs/</link><guid isPermaLink="false">https://happyschool.github.io/003-ipfs/</guid><pubDate>Thu, 25 Apr 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Next generation Web, Web3, should be more decentralized and censorship resistant, which requires a more decentralized way for data storage. That is why IPFS, InterPlanetary File System, and Filecoin got so much attention, and invested by well known venture capitals like Y Combinator, Naval Ravikant, Andreessen Horowitz, Union Square Ventures Sequoia and Winklevoss Capital. Now let’s figure out how IPFS works under the hood.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019042501.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;from-where-to-what&quot;&gt;&lt;a href=&quot;#from-where-to-what&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From Where To What&lt;/h2&gt;
&lt;p&gt;IPFS created by Protocol Labs as a brand new data storage protocol, is a lot different from the current way data retrieved with HTTP on Web.&lt;/p&gt;
&lt;p&gt;The current solution is from domain name to IP address and then server. There are two Single Point Of Failure here, one is the DNS service, the other is the server itself. Once domain is blocked, server shut down because of censorship, the data is not longer available. Such Web can not be free, the practitioners like you and me know this too well.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019042502.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;However, the solution IPFS gives is to retrieve by what it is rather than where it is. We get the file by its hash, because the IPFS always has the file named by its hash. A file hash maps to its content, that’s why we call the IPFS way is getting by what it is. This approach brings two advantages. NO.1, Once I get the file I can be sure it is not tempered, since the hash can be calculated and checked if it matches the filename. NO.2, Same content produce the same file name, we can safely delete files with same name and keep only one copy of the file to save space on Web.&lt;/p&gt;
&lt;p&gt;To put it simply, IPFS retrieves data by hash, that means retrieving by the content of a file, by what it is.&lt;/p&gt;
&lt;h2 id=&quot;from-a-single-server-to-decentralized-storage&quot;&gt;&lt;a href=&quot;#from-a-single-server-to-decentralized-storage&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From A Single Server To Decentralized Storage&lt;/h2&gt;
&lt;p&gt;IPFS also differs in the way how data is stored.&lt;/p&gt;
&lt;p&gt;Storing content on a single server has obvious problems. Firstly, all users need to go for the same server and easily make the service slow. Secondly, this is vulnerable to DDOS attack, that is someone intentionally sends huge number of requests to make the service unavailable to others.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019042503.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;However, IPFS takes a distributed approach. Data is saved on all the clients using IPFS, forming a Your Client Is My Server architecture. When a file is saved, it is divided into smaller data blocks named IPFS Object, which can save up to 256k data in it. All the objects are organized into a Merkle Tree, and saved on different machines, therefore, IPFS is sometimes called The Merkle Web.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019042504.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Furthermore, data is version controlled in IPFS. The way how data is saved is quite similar to Git. After all, Git by nature is a file system that locates data by content. IPFS data is immutable, this is exactly like Git as well. If a file is updated, then it is saved as a latest version, the older versions of this file kept untouched. Under the hood, all versions are saved like Git through commits, so that the same part of the file won’t be copied and cause storage waste.&lt;/p&gt;
&lt;p&gt;That’s what I mean by IPFS takes a distributed way to save data.&lt;/p&gt;
&lt;h2 id=&quot;filecoin&quot;&gt;&lt;a href=&quot;#filecoin&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Filecoin&lt;/h2&gt;
&lt;p&gt;IPFS alone leaves an important problem unsolved, that is how to motive people to save files for complete strangers. Inspired by blockchain projects like Bitcoin and Ethereum, Protocol Labs created Filecoin in order to provide an incentive layer for IPFS. Simply put it, you store files for others, you get Filecoins as a reward.&lt;/p&gt;
&lt;p&gt;Storing data for others in IPFS is like mining for a blockchain. The creators of Filecoins knows that how big the blockchain mining pool can be, and wish to see people building server farms for IPFS, and use the power to store files for other people. Storing is like mining, which gets rewarded. On the other hand, I can spend Filecoins to motivate people to save files for me.&lt;/p&gt;
&lt;p&gt;People holding Filecoins are share holders of IPFS network. They are more likely  to be willing to maintain the whole system. If the ecosystem gets stronger, the price of Filecoin will rise.&lt;/p&gt;
&lt;p&gt;At the same time, Filecoin is by design to encourage right user behavior. Say, encouraging people to save just enough copies of a file, so that when part of the servers are taken down, the data will still be available.
That’s how Filecoin can help IPFS in the sense of fast adoption.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;IPFS is aimed for serving as an alternative to HTTP based Web architecture. To conclude this episode, I want to stress on several points. Firstly, IPFS finds a file by what it is not where it is. Secondly, IPFS saves data in a distributed way, organizes objects into the Merkle Tree. Thirdly, Filecoin provides the incentive for IPFS’s mass adoption。&lt;/p&gt;
&lt;p&gt;IPFS alone can not be the next web, it takes other components to really rebuild a next Web. I recommend blockstack if you want to check a possible full stack sultion for the next generation Web.&lt;/p&gt;
&lt;p&gt;Ref:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/bitfwd/what-is-decentralised-storage-ipfs-filecoin-sia-storj-swarm-5509e476995f&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://medium.com/bitfwd/what-is-decentralised-storage-ipfs-filecoin-sia-storj-swarm-5509e476995f&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/InterPlanetary_File_System&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://en.wikipedia.org/wiki/InterPlanetary&lt;em&gt;File&lt;/em&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://filecoin.io/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://filecoin.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ipfs.io/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://ipfs.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=5Uj6uR3fp-U&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://www.youtube.com/watch?v=5Uj6uR3fp-U&lt;/a&gt; IPFS - Simply Explained&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blockstack.org/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://blockstack.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at overreacted.io. You can read it online by &lt;a href=&quot;https://happyschool.github.io/003-ipfs/&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item><item><title><![CDATA[Blockchain State Explosion]]></title><description><![CDATA[What is Blockchain State Explosion, and why is that a problem? Is all data on a blockchain state? What’s the current situation of Bitcoin and other chains, why we need to solve this before we can move on?]]></description><link>https://happyschool.github.io/002-state/</link><guid isPermaLink="false">https://happyschool.github.io/002-state/</guid><pubDate>Thu, 18 Apr 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://happyschool.github.io/yes/&quot;&gt;&lt;/a&gt;
What is Blockchain State Explosion, and why is that a problem? Is all data on a blockchain state? What’s the current situation of Bitcoin and other chains, why we need to solve this before we can move on? With these questions, let’s start this week’s episode.&lt;/p&gt;
&lt;p&gt;A few months ago, I read a post &lt;a href=&quot;https://talk.nervos.org/t/topic/1515&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://talk.nervos.org/t/topic/1515&lt;/a&gt; by @janx, CTO at Nervos Network, which helped me a lot to understand what Blockchain State Explosion is. Before that I was always considering state explosion simply means the blockchain gets too big in size, but now I know I was wrong. However the post is a bit long and takes some time to digest for people don’t know blockchain technology well. So I decide to tell the story again with a bit explanation and leaving some tech details alone. Hopefully my version can be much easier to understand.&lt;/p&gt;
&lt;h2 id=&quot;what-is-state&quot;&gt;&lt;a href=&quot;#what-is-state&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is State?&lt;/h2&gt;
&lt;p&gt;We know that over time blockchains save data to every each block, we somehow knows that the data, once saved, is not mutable any more. But Is all the data on Blockchain state? Can blockchain state ever be changed?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019041802.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;First question, is all data state? The short answer is NO. let’s say we have an ordinary programing running. there is a variable x, current value is 1. Then 1 is the state of the program, later x is changed to 2, now 1 becomes history, 2 becomes the state of the program. State means not only data but also data in use. &lt;/p&gt;
&lt;p&gt;Likewise, data saved on blockchain can be divided into two categories：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;State — the current data in use.&lt;/li&gt;
&lt;li&gt;History — data besides state, or we can simply call it ‘past data’&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now the answer for the first question, is all data state? No, there is history too.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019041803.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;The second question is actually interesting. Can state be changed? Surely Yes. Take Bitcoin for example, the state is who owns how much, with new transactions happening constantly, the state changes accordingly. When we say blockchain is IMMUTABLE, we mean the history, not the state.&lt;/p&gt;
&lt;p&gt;Now we know what state means.&lt;/p&gt;
&lt;h2 id=&quot;what-is-blockchain-state-explosion&quot;&gt;&lt;a href=&quot;#what-is-blockchain-state-explosion&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Blockchain State Explosion?&lt;/h2&gt;
&lt;p&gt;Next part, let’s figure out what is blockchain state explosion. State explosion means the state size grows too fast and is out of control.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019041804.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Bitcoin currently does not have this problem, cause the Bitcoin state size only grows linearly. Bitcoin is a ledger, the state of Bitcoin is what the ledger looks like or what everyone’s balance is right now. Within every Bitcoin block, there are transactions, the history consists of all these transactions. The state is all these UTXO, that is Unspent Transaction Output. The size of Bitcoin’s entire history (the size of all blocks combined) is about 200G, and the size of state is only ~3G (consisting of ~50 million UTXO components). With the constraint of fixed block size, the state growth is linear. That is not too much for the network to handle, giving the fact that the price of hardware and bandwidth will going down slowly.&lt;/p&gt;
&lt;p&gt;But smart contract platforms like Ethereum are more vulnerable to the explosion. People need to store all kinds of data on the chain. Once the blockchain get mass adoption the state growth rate will exponentially outpaced the hardware capability growth. Nervos tries to solve this with its layered architecture, the details are out of the scope of this episode.&lt;/p&gt;
&lt;p&gt;So Blockchain State Explosion is becoming a problem.&lt;/p&gt;
&lt;h2 id=&quot;why-is-it-a-problem&quot;&gt;&lt;a href=&quot;#why-is-it-a-problem&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why Is It a Problem?&lt;/h2&gt;
&lt;p&gt;So why is the explosion a problem?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019041805.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Firstly. Once the blockchain grows too big in size, nodes on the network will have to spend more money for storage hardware, that harms decentralization cause normal people will not be able to afford running a node.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019041806.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Secondly. History is ignorable, state is not. Nodes sometimes only need to store state to function properly. History can be saved elsewhere and verified by introducing some techniques like checkpoints and zero-knowledge proof when necessary, but if the state explodes, all nodes will have to bear it, because state is indispensable to keep things going.&lt;/p&gt;
&lt;p&gt;That’s why state explosion is a problem for blockchains.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;To conclusion this episode. I hope I have made two points really clear. NO.1 Blockchain data can be categorized into two types: history and state. NO.2 Blockchain State Explosion has to be solved before blockchain mass adoption.&lt;/p&gt;
&lt;p&gt;ref:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://talk.nervos.org/t/blockchain-and-state-explosion/1566&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://talk.nervos.org/t/blockchain-and-state-explosion/1566&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://talk.nervos.org/t/topic/1515&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://talk.nervos.org/t/topic/1515&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at overreacted.io. You can read it online by &lt;a href=&quot;https://happyschool.github.io/002-state/&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item><item><title><![CDATA[Why Rust?]]></title><description><![CDATA[Rust is a new language released in 2015, as an alternative for C/C++, or other higher-level languages. Why yet another programming language? Let's explore its strengths now.]]></description><link>https://happyschool.github.io/001-rust/</link><guid isPermaLink="false">https://happyschool.github.io/001-rust/</guid><pubDate>Thu, 11 Apr 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Rust is a new programming language released on May 15th 2015, providing an alternative to C/C++, but also higher-level languages. So the obvious question is&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why yet another programming language ?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now we are going to give the answer by showing rust’s true strengths.&lt;/p&gt;
&lt;h2 id=&quot;its-fast&quot;&gt;&lt;a href=&quot;#its-fast&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;It’s Fast&lt;/h2&gt;
&lt;p&gt;If you are using some higher-level languages running on top of a abstraction layer, say Ruby or Python, you should try rust if you want your app to be more performant.
Rust is a compiled language, like C, it controls resource directly, that’s why Rust code runs very fast and is good for writing system software. A lot of blockchain projects are using Rust, because app written in Rust can be really performant, due to Rust’s ability to fully control the hardware.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019041203.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Rust offers zero-cost abstraction. Rust has a lot of sweet high level language features over some abstractions. But Rust is carefully designed, so that all these abstractions are at no cost. The compiler will take care of them, and no runtime or garbage collector is required to support these abstractions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019041204.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Rust plays well with other languages. Rust interfaces to other languages through the C ABI at zero cost. you can use C library in Rust Code, or use Rust library in C code.&lt;/p&gt;
&lt;p&gt;Now let’s understand the Rust way with a demo. Ruby language has a method named &lt;code class=&quot;language-text&quot;&gt;blank&lt;/code&gt;, which is used to check if a string is blank. The ruby implementation is like this.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;ruby&quot;&gt;&lt;pre class=&quot;language-ruby&quot;&gt;&lt;code class=&quot;language-ruby&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;String&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; blank&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;\&lt;span class=&quot;token constant&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token symbol&quot;&gt;:space&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;\z&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;self&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Looks simple, but performance is not so good, 964K iteration/sec.&lt;/p&gt;
&lt;p&gt;So some &lt;a href=&quot;https://github.com/SamSaffron/fast_blank&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;cool dude&lt;/a&gt; developed a fast blank with C.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c&quot;&gt;&lt;pre class=&quot;language-c&quot;&gt;&lt;code class=&quot;language-c&quot;&gt;&lt;span class=&quot;token macro property&quot;&gt;#&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token macro property&quot;&gt;#&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;lt;ruby.h&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token macro property&quot;&gt;#&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;lt;ruby/encoding.h&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token macro property&quot;&gt;#&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;lt;ruby/re.h&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token macro property&quot;&gt;#&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;lt;ruby/version.h&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token macro property&quot;&gt;#&lt;span class=&quot;token directive keyword&quot;&gt;define&lt;/span&gt; STR_ENC_GET(str) rb_enc_from_index(ENCODING_GET(str))&lt;/span&gt;

&lt;span class=&quot;token macro property&quot;&gt;#&lt;span class=&quot;token directive keyword&quot;&gt;ifndef&lt;/span&gt; RUBY_API_VERSION_CODE&lt;/span&gt;
&lt;span class=&quot;token macro property&quot;&gt;# &lt;span class=&quot;token directive keyword&quot;&gt;define&lt;/span&gt; ruby_version_before_2_2() 1&lt;/span&gt;
&lt;span class=&quot;token macro property&quot;&gt;#&lt;span class=&quot;token directive keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token macro property&quot;&gt;# &lt;span class=&quot;token directive keyword&quot;&gt;define&lt;/span&gt; ruby_version_before_2_2() (RUBY_API_VERSION_CODE &amp;lt; 20200)&lt;/span&gt;
&lt;span class=&quot;token macro property&quot;&gt;#&lt;span class=&quot;token directive keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; VALUE
&lt;span class=&quot;token function&quot;&gt;rb_str_blank_as&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;VALUE str&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  rb_encoding &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;enc&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  enc &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;STR_ENC_GET&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;str&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  s &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;RSTRING_PTR&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;str&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;s &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;RSTRING_LEN&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;str&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; Qtrue&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  e &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;RSTRING_END&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;str&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; cc &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rb_enc_codepoint_len&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;n&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; enc&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cc&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0xa&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0xb&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0xc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0xd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x85&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0xa0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x1680&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2001&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2002&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2003&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2004&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2005&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2006&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2007&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2008&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2009&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x200a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2028&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2029&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x202f&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x205f&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x3000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;token macro property&quot;&gt;#&lt;span class=&quot;token directive keyword&quot;&gt;if&lt;/span&gt; ruby_version_before_2_2()&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x180e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;token macro property&quot;&gt;#&lt;span class=&quot;token directive keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token comment&quot;&gt;/* found */&lt;/span&gt;
          &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; Qfalse&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    s &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; Qtrue&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; VALUE
&lt;span class=&quot;token function&quot;&gt;rb_str_blank&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;VALUE str&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  rb_encoding &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;enc&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  enc &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;STR_ENC_GET&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;str&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  s &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;RSTRING_PTR&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;str&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;s &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;RSTRING_LEN&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;str&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; Qtrue&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  e &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;RSTRING_END&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;str&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; cc &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rb_enc_codepoint_len&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;n&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; enc&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;rb_isspace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cc&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cc &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; Qfalse&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    s &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; Qtrue&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Init_fast_blank&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;rb_define_method&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rb_cString&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;blank?&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; rb_str_blank&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;rb_define_method&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rb_cString&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;blank_as?&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; rb_str_blank_as&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is ten times more performant, 10.5M iter/sec. But looking at the code, we know it’s not esay to do it right in C, there are lots of things you need to keep in mind.&lt;/p&gt;
&lt;p&gt;But finally let’s look the implementation in Rust.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;rust&quot;&gt;&lt;pre class=&quot;language-rust&quot;&gt;&lt;code class=&quot;language-rust&quot;&gt;exten &lt;span class=&quot;token string&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fast_blank&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;buf&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Buf&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;-&gt;&lt;/span&gt; bool &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  buf&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;as_slice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;chars&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;c&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; c&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;is_whitespace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Much simpler code, thanks to Rust’s higher level language features. And it’s as performant, 11M iter/sec.&lt;/p&gt;
&lt;p&gt;So we can see Rust is really fast, because of its zero-cost abstraction.&lt;/p&gt;
&lt;h2 id=&quot;its-safe&quot;&gt;&lt;a href=&quot;#its-safe&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;It’s safe&lt;/h2&gt;
&lt;p&gt;To those who is using C/C++ and already have full control of the hardware, you still should try rust if you want to be a more efficient developer. Rust offers safety guarantees, that makes development so much easier.&lt;/p&gt;
&lt;p&gt;C/C++ offer great power, but also expose us in front of lots of risks. C can implement extraordinary performance but with lower abstraction and results in human mistakes easily. Like C, C++ can be really unforgiving, even if there is some small mistake, you will get a runtime crash if you are lucky, otherwise you might be trapped in a very unclear situation. If you are using C/C++, You need to worry about the hardware machine, while you are implementing your features, double effort, one output. This was exactly how I felt, when I was a full time C++ dev as my first job.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019041205.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;However, Rust gives us strong safety guarantees. No segment fault, no run time crash, no dangling pointers, no out-of-bound accesses. and data race free. Rust achieves this by certain language features and good compiler support. If ever you do some thing wrong, the compiler will tell you about it.&lt;/p&gt;
&lt;p&gt;Hack without fear is Rust’s slogan. You do not worry about your program once the compilation is complete.&lt;/p&gt;
&lt;h2 id=&quot;its-ergonomic&quot;&gt;&lt;a href=&quot;#its-ergonomic&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;It’s ergonomic&lt;/h2&gt;
&lt;p&gt;A lot of people love Ruby, cause it&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Optimize for Programmer Happiness.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Rust also wants the developers to be happier and try its best to be ergonomic.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019041206.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Rust supports multiple programming paradigms, like generic, imperative, structured. It is also inspired by Haskell, you can do functional programming with rust. You can explicitly define a variable to be mutable, but by default, everything is immutable. That sort of sweetness is not sth C/C++ offers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.haoqicat.com/2019041207.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Rust has great tooling. It has a npm like system that you can get the ready-made code as packages. Tools are available to take care of your dependency management. Rust also has great build system, that means no more hand made Makefiles.&lt;/p&gt;
&lt;p&gt;Great community. Rust is from Mozilla, but more than 4/5 of contributions come from outside Mozilla. Rust compiler has more than 2000 contributors. Dropbox and Canonical,that is the company behind Ubuntu, and other companies are using Rust. Firefox is porting its core components from C++ to Rust. Rust is a true community thing, if you know what I am saying.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Rust preserves the conveniences of high-level languages in low-level land. It’s as fast as C/C++, and as safe and easy to use as higher-level languages like Python/Ruby or Haskell. That’s why lots of peope move to rust land from the higher or lower world.&lt;/p&gt;
&lt;p&gt;That’s all for this episode, if want some discussion, I am happypeter1983 on twitter.&lt;/p&gt;
&lt;p&gt;Ref:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@Aimeedeer/why-rust-c877fba0ca94&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://medium.com/@Aimeedeer/why-rust-c877fba0ca94&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=cDFSrVhnZKo&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://www.youtube.com/watch?v=cDFSrVhnZKo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_jMSrMex6R0&amp;#x26;t=677s&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://www.youtube.com/watch?v=_jMSrMex6R0&amp;#x26;t=677s&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-Tj8Q12DaEQ&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://www.youtube.com/watch?v=-Tj8Q12DaEQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://intorust.com/tutorial/why-rust/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;http://intorust.com/tutorial/why-rust/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at overreacted.io. You can read it online by &lt;a href=&quot;https://happyschool.github.io/001-rust/&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item></channel></rss>